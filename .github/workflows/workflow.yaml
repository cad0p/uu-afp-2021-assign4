# SOURCE: https://gist.github.com/KtorZ/ee63855c893747f5156da171027793e8
name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# Remember to set GitHub Pages deployment using GitHub Actions in settings
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
      id: ACTIONS_ALLOW_UNSECURE_COMMANDS
      run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV

    - name: 💽 Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: libgmp-dev 

    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: 🧰 Setup Stack
      uses: haskell/actions/setup@v2
      with:
        ghc-version: '8.10.7'
        enable-stack: true
        stack-version: 'latest'

    - name: 🔑 Cache Key
      id: cache_key
      run: echo ::set-output name=key::$(md5sum stack.yaml | awk '{print $1}')

    - name: 💾 Cache Dependencies
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ steps.cache_key.outputs.key }}

    - name: 🏷️ Variables
      id: variables
      run: |
        echo ::set-output name=pkg_name::$(cat *.cabal | grep "name:" | sed "s/name:\s*\(.*\)/\1/")

    - name: 📸 Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd assign4-cad0p
        stack --no-terminal test --bench --only-snapshot

    - name: 🔨 Build & Test
      run: |
        cd assign4-cad0p
        stack --no-terminal test --bench --haddock --no-haddock-deps --no-run-benchmarks
        mkdir -p dist/haddock && mv $(stack path --local-install-root)/doc/* dist/haddock
        sed -i 's@href="[^"]*/doc/\([^"]*.html\)"@href="\1"@g' dist/haddock/index.html
        wget -O Makefile https://gist.githubusercontent.com/KtorZ/0c7411f9bda2db1b3e0ded2ef0c40381/raw/1f818bd0385d8d917903e3f67ee3bfee3002de7a/Makefile
        mkdir -p .coverage && touch .coverage/template.overlay
        DESTDIR=dist/coverage make report && DESTDIR=dist/coverage make badge
      env:
        PKG_NAME: ${{ steps.variables.outputs.pkg_name }}
    - name: 📘 Publish Documentation - setup
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: actions/configure-pages@v2
    - name: 📘 Publish Documentation - build
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./assign4-cad0p/dist
        destination: ./_site
    - name: 📘 Publish Documentation - upload
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push'
      uses: actions/upload-pages-artifact@v1

  # Deployment job
  pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  release:
    needs: [build]
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v1

    - name: 🚀 Release
      uses: docker://antonyurchenko/git-release:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRAFT_RELEASE: "true"
        PRE_RELEASE: "false"
        CHANGELOG_FILE: "ChangeLog.md"
        ALLOW_EMPTY_CHANGELOG: "false"
        ALLOW_TAG_PREFIX: "true"
